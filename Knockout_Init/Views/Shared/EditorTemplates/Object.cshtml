@using System.Reflection
@model object;


@{
    Dictionary<string, string> ListProperties = new Dictionary<string, string>();

    <!--PEGANDO O NOME DO ATRIBUTO E SEU RESPECTIVO DISPLAY -->

    foreach (PropertyInfo LProperty in Model.GetType().GetProperties())
    {
        <!-- Se o atributo estiver marcado como "IgnoreOnView" nÃ£o sera mapeado o HTML -->
        if(LProperty.CustomAttributes.FirstOrDefault().AttributeType.Name != "IgnoreOnView") {
            string PropertyName = LProperty.Name;

            string PropertyDisplayName = LProperty.CustomAttributes.Where(p => p.AttributeType.Name == "DisplayAttribute")
                .SelectMany(p => p.NamedArguments).First().TypedValue.Value.ToString();

            ListProperties.Add(LProperty.Name,PropertyDisplayName);
        }
    }
}

<div class="row">
    @{
        foreach (var LProperty in ListProperties)
        {
            <div class="col-5 mx-4 p-2" id="div-@LProperty.Key">
                <div>@Html.Editor(LProperty.Key)</div>
            </div>
        }
    }
</div>